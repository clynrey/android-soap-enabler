#**
    Android SOAP Enabler is free software: you can redistribute it and/or modify
    it under the terms of the Lesser GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, 
    or any later version.

    Android SOAP Enabler is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the Lesser GNU General Public License
    along with Android SOAP Enabler.  If not, see <http://www.gnu.org/licenses/>.

    Â©2011, Android SOAP Enabler Development Team
*#/**
 * GENERATED CODE - DO NOT EDIT THIS FILE
 * generated from service-interface.java.vm
 */
package ${type.namespace.toJavaPackage()};

/**
 * $type service interface.
 */
public interface ${type.toJavaType()}
{
#foreach( $operation in ${type.operations} )
#if ( ${operation.output} )
#set( $output = ${operation.output.parts.iterator().next()} )
	/**
	 * Synchronous operation ${operation.name}
	 */
#if ( ${operation.output.getPart("parameter")} )
	${operation.output.getPart("parameters").element.type.toFullQualifiedJavaType()}
#else
	${output.type.toFullQualifiedJavaType()}
#end
	${operation.name} (
#if ( ${operation.input.getPart("parameters")} )
		${operation.input.getPart("parameters").element.type.toFullQualifiedJavaType()} ${operation.input.getPart("parameters").element.name}
	)
#else
#foreach( $input in ${operation.input.parts} )
		${input.type.toFullQualifiedJavaType()} ${input.name}#if( $velocityCount < ${operation.input.parts.size()} - 1 ),
#end
#end
	)
#end
#if( ${operation.faults.size()} > 0 )
#then
		throws
#foreach( $fault in ${operation.faults} )
			${fault.parts.iterator().next().type.toFullQualifiedJavaType()},
#end
			java.io.IOException;
#else
		throws java.io.IOException;
#end

	/**
	 * Asynchronous operation ${operation.name}
	 *
	 * @param callBack What to do after remote call.
	 */
	void ${operation.name}(
#foreach( $input in ${operation.input.parts} )
		${input.type.toFullQualifiedJavaType()} ${input.name},
#end
		fr.norsys.asoape.ws.WSCallBack<${output.type.toFullQualifiedJavaType()}> callBack );
#else
	/**
	 * Operation ${operation.name}
	 *
	 * @param ${input.name} Request.
	 * @throws java.io.IOException Error occurs during remote call.
	 */
	void ${operation.name}( ${input.type.toFullQualifiedJavaType()} ${input.name} )
		throws java.io.IOException;
#end 
#end
}
